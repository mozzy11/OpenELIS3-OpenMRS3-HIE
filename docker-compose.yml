version: '3.6'

##### OpenELIS3
x-logging:
  &local-logging
  driver: "local"
  options:
    max-size: "20m"
    max-file: "50"

x-loki-logging:
  &loki-logging
  driver: "loki"
  options:
    max-size: "20m"
    max-file: "50"
    loki-url: "[% loki_url %]"
    loki-external-labels: "container_name={{.Name}},hostname=[% host_name %]"
    loki-pipeline-stages: |
          - multiline:
              firstline: '^\d{4}-\d{2}-\d{2}[T ]?\d{2}:\d{2}:\d{2}.\d{3}'
          - labeldrop:
              - compose_project
              - compose_service
              - filename
              - source
              - stream
              - swarm_service
              - swarm_stack
services:
    certs:
        container_name: oe-certs 
        image: itechuw/certgen:main
        platform: linux/amd64  
        restart: always
        environment:
            - KEYSTORE_PW="kspass"
            - TRUSTSTORE_PW="tspass"
        volumes:
            -  key_trust-store-volume:/etc/openelis-global
            -  keys-vol:/etc/ssl/private/
            -  certs-vol:/etc/ssl/certs/

    db.openelis.org:
        container_name: openelisglobal-database 
        image: postgres:14.4
        ports:
            - "15432:5432"
        restart: always
        env_file:
            - ./volumes/openelis/database/database.env
        volumes:
              # preserves the database between containers
            - oe-db-data:/var/lib/postgresql/data                
              # files here will run on install
            - ./volumes/openelis/database/dbInit:/docker-entrypoint-initdb.d
        logging: *local-logging    
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "clinlims", "-U", "clinlims" ]
            timeout: 45s
            interval: 10s
            retries: 10 
            
    oe.openelis.org:
        container_name: openelisglobal-webapp 
        image: itechuw/openelis-global-2:3.2.0.1
        platform: linux/amd64  
        depends_on:
            - db.openelis.org
            - fhir.openelis.org
            - certs
        ports:
            - "8080:8080"
            - "8443:8443"
        restart: always
        logging: *local-logging      
        environment:
            - DEFAULT_PW=adminADMIN! 
            - TZ=Africa/Nairobi
              # context.xml doesn't seem to be able to pick up environment variables directly, so we are passing them in as CATALINA_OPTS
            - CATALINA_OPTS= -Ddatasource.url=jdbc:postgresql://db.openelis.org:5432/clinlims -Ddatasource.username=clinlims
        volumes:
            -  key_trust-store-volume:/etc/openelis-global
            - ./volumes/openelis/plugins/:/var/lib/openelis-global/plugins
            - ./volumes/openelis/tomcat/oe_server.xml:/usr/local/tomcat/conf/server.xml
            - ./volumes/openelis/logs/oeLogs:/var/lib/openelis-global/logs
            - ./volumes/openelis/logs/tomcatLogs/:/usr/local/tomcat/logs
            - ./volumes/openelis/properties/SystemConfiguration.properties:/var/lib/openelis-global/properties/SystemConfiguration.properties
            
        secrets:
            - source: datasource.password
            - source: common.properties
            
    fhir.openelis.org:
        container_name: external-fhir-api
        image: hapiproject/hapi:v6.6.0-tomcat
        ports:
            - "8081:8080"
            - "8444:8443"
        depends_on:
            - db.openelis.org
            - certs    
        restart: always
        environment:
          SPRING_CONFIG_LOCATION: file:///run/secrets/hapi_application.yaml
          TZ: Africa/Nairobi
          
          JAVA_OPTS: "-Djavax.net.ssl.trustStore=/etc/openelis-global/truststore 
                      -Djavax.net.ssl.trustStorePassword=tspass
                      -Djavax.net.ssl.trustStoreType=pkcs12 
                      -Djavax.net.ssl.keyStore=/etc/openelis-global/keystore 
                      -Djavax.net.ssl.keyStorePassword=kspass 
                      -Djavax.net.ssl.keyStoreType=pkcs12"   

        logging: *local-logging                       
        volumes:
            -  key_trust-store-volume:/etc/openelis-global
            - ./volumes/openelis/tomcat/hapi_server.xml:/opt/bitnami/tomcat/conf/server.xml
        secrets:
            - source: hapi_application.yaml    

         
    frontend.openelis.org:
        image: itechuw/openelis-global-2-frontend:3.2.0.1
        container_name: openelisglobal-front-end
        platform: linux/amd64
        environment:
            - CHOKIDAR_USEPOLLING=true
        logging: *local-logging    
        tty: true
        depends_on:
            - oe.openelis.org

    proxy:
        image: nginx:1.15-alpine
        container_name: openelisglobal-proxy
        ports:
            # - 80:80
            - 443:443
        volumes:
            - certs-vol:/etc/nginx/certs/
            - keys-vol:/etc/nginx/keys/
            - ./volumes/openelis/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            # - /KEYSTORE_PASSWORD:/etc/nginx/private/key_pass
            # - /etc/openelis-global/nginx.cert.pem:/etc/nginx/certs/cert.crt
            # - /etc/openelis-global/nginx.key.pem:/etc/nginx/certs/cert.key
        restart: unless-stopped
        logging: *local-logging    
        depends_on:
            - certs
            - frontend.openelis.org    

    autoheal:
        container_name: autoheal-oe
        image: willfarrell/autoheal:1.2.0
        tty: true
        restart: always
        environment:
            AUTOHEAL_CONTAINER_LABEL: all
            TZ: Africa/Nairobi
        logging: *local-logging    
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock     

##### OpenMRS3
    gateway:
        image: openmrs/openmrs-reference-application-3-gateway:dev3
        container_name: openmrs-proxy
        restart: "unless-stopped"
        depends_on:
            - frontend
            - backend
        ports:
            - "80:80"

    frontend:
        image: openmrs/openmrs-reference-application-3-frontend:dev3
        container_name: openmrs-frontend
        restart: "unless-stopped"
        environment:
            SPA_PATH: /openmrs/spa
            API_URL: /openmrs
            SPA_CONFIG_URLS: /openmrs/spa/config-core_demo.json
            SPA_DEFAULT_LOCALE:
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost/"]
            timeout: 5s
        depends_on:
            - backend

    backend:
        image: openmrs/openmrs-reference-application-3-backend:dev3
        container_name: openmrs-backend
        restart: "unless-stopped"
        depends_on:
            - db
        environment:
            OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
            OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
            OMRS_CONFIG_CREATE_TABLES: "true"
            OMRS_CONFIG_CONNECTION_SERVER: db
            OMRS_CONFIG_CONNECTION_DATABASE: openmrs
            OMRS_CONFIG_CONNECTION_USERNAME: ${OPENMRS_DB_USER:-openmrs}
            OMRS_CONFIG_CONNECTION_PASSWORD: ${OPENMRS_DB_PASSWORD:-openmrs}
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
            timeout: 5s
        volumes:
            - ./volumes/openmrs/distro/configuration/globalproperties/openelis-openmrs.xml:/openmrs/distribution/openmrs_config/globalproperties/openelis-openmrs.xml
            - ./volumes/openmrs/modules/labonfhir-1.5.1-SNAPSHOT.omod:/openmrs/distribution/openmrs_modules/labonfhir-1.5.1-SNAPSHOT.omod
            - ./volumes/openmrs/modules/event-2.11.0-SNAPSHOT.omod:/openmrs/distribution/openmrs_modules/event-2.11.0-SNAPSHOT.omod
            - openmrs-data:/openmrs/data
        ports:
            - "8282:8080"            

    # Maria DB
    db:
        image: mariadb:10.11.7
        container_name: openmrs-db
        restart: "unless-stopped"
        command: "mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci"
        healthcheck:
            test: "mysql --user=${OMRS_DB_USER:-openmrs} --password=${OMRS_DB_PASSWORD:-openmrs} --execute \"SHOW DATABASES;\""
            interval: 3s
            timeout: 1s
            retries: 5
        ports:
            - "3306:3306"    
        environment:
            MYSQL_DATABASE: openmrs
            MYSQL_USER: ${OMRS_DB_USER:-openmrs}
            MYSQL_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-openmrs}
        volumes:
            - omrs-db-data:/var/lib/mysql

    #OpenHIM -IOL
    mongo:
        image: mongo:3.4
        container_name: openhim-mongo
        ports:
            - "27017:27017"
       

    openhim-core:
        container_name: openhim-core
        image: jembi/openhim-core:v7.1.0
        restart: unless-stopped
        environment:
            - mongo_url=mongodb://mongo/openhim
            - mongo_atnaUrl=mongodb://mongo/openhim
        healthcheck:
            test: "node /healthcheck.js"
            interval: 20s
            timeout: 20s
            retries: 2
        volumes:
            - ./volumes/openhim/configs/healthcheck.js:/healthcheck.js
        ports:
            - "8085:8080"
            - "5000:5000"
            - "5001:5001"
            - "5050:5050"
            - "5051:5051"
            - "5052:5052"
            - "7788:7788" 
        depends_on:
            - mongo

    openhim-console:
        container_name: openhim-console
        image: jembi/openhim-console:v1.15.0
        ports:
            - "9000:80"
        volumes:
            - ./volumes/openhim/configs/default.json:/usr/share/nginx/html/config/default.json
        depends_on:
            - openhim-core   
            - openhim-config 
        healthcheck:
            test: "curl -sS http://openhim-console || exit 1"
            interval: 10s
            timeout: 60s
            retries: 3

    # Loads Default OpenHIM Config
    openhim-config:
        container_name: openhim-config
        image: ghcr.io/digi-uw/openhim-config:v0.0.0
        platform: linux/amd64
        volumes:
            - ./volumes/openhim/configs/openhim-config.json:/app/test-openhim-config.json

    # # Hapi-FHIR -  SHR
    shr-hapi-fhir:
        container_name: shr-hapi-fhir
        image: hapiproject/hapi:v5.5.1
        depends_on:
            - shr-db
        ports:
            - "8090:8080"
        restart: always
        environment:
            - hapi.fhir.auto_create_placeholder_reference_targets=true
            - hapi.fhir.allow_placeholder_references=true
            - hapi.fhir.allow_external_references=true
            - hapi.fhir.client_id_strategy=ANY
            - hapi.fhir.mdm_enabled=false
            - spring.datasource.url=jdbc:postgresql://shr-db:5432/hapi
            - spring.datasource.username=admin
            - spring.datasource.password=admin
            - spring.datasource.driverClassName=org.postgresql.Driver
        volumes:
            - hapi-data:/data/hapi

    shr-db:
        image: postgres:14.4
        container_name: hapi-fhir-db
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: 'hapi'
            POSTGRES_USER: 'admin'
            POSTGRES_PASSWORD: 'admin'
        volumes:
            - hapi-fhir-db:/var/lib/postgresql/data

   # FHIR Pipeline
    # pipeline-controller:
    #     image: us-docker.pkg.dev/cloud-build-fhir/fhir-analytics/main:latest
    #     container_name: pipeline-controller
    #     volumes:
    #         - ./volumes/fhirpipes/config:/app/config:ro
    #         - ./volumes/fhirpipes/dwh:/dwh
    #     environment:
    #         - JAVA_OPTS=-Xms7g -Xmx7g
    #     ports:
    #         - '8095:8080'         
     
                
secrets:
  datasource.password:
    file: ./volumes/openelis/properties/datasource.password  
  common.properties:
    file:  ./volumes/openelis/properties/common.properties  
  hapi_application.yaml:
    file: ./volumes/openelis/properties/hapi_application.yaml  

        
volumes:
  oe-db-data:
  key_trust-store-volume:
  certs-vol:
  keys-vol:
  openmrs-data: 
  omrs-db-data: 
  hapi-data:
  hapi-fhir-db: